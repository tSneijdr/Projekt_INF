package model;

import java.util.LinkedList;
import java.util.List;

import javafx.scene.paint.Color;

/**
 * Stellt einen Knoten im Graphen dar Speichert u.a. Daten zum darstellen des
 * Knotens
 * 
 * @author tobi
 *
 */
public class Node {

	// Beschreibt die Darstellung des Knotens
	private Color color;
	private NodeType shape;

	// Beschreibt den Ort des Knotens sowie MaÃŸe
	private int xCenter;
	private int yCenter;

	private int radius;

	// Eltern- und Kinderknoten
	private final List<Node> parents;
	private final List<Node> children;

	public Node() {
		this.color = Color.BLACK;
		this.shape = NodeType.DEFAULT;

		this.xCenter = 0;
		this.yCenter = 0;

		this.radius = 1;

		// Eltern- und Kinderliste
		parents = new LinkedList<Node>();
		children = new LinkedList<Node>();
	}

	// Getter und Setter
	public void addChild(Node child) {
		children.add(child);
	}

	public List<Node> getChildren() {
		return children;
	}

	public void addParent(Node parent) {
		children.add(parent);
	}

	public List<Node> getParents() {
		return parents;
	}

	public Color getColor() {
		return color;
	}

	public void setColor(Color color) {
		this.color = color;
	}

	public NodeType getShape() {
		return shape;
	}

	public void setShape(NodeType shape) {
		this.shape = shape;
	}

	public int getxCenter() {
		return xCenter;
	}

	public void setxCenter(int xCenter) {
		this.xCenter = xCenter;
	}

	public int getyCenter() {
		return yCenter;
	}

	public void setyCenter(int yCenter) {
		this.yCenter = yCenter;
	}

	public int getRadius() {
		return radius;
	}

	public void setRadius(int radius) {
		this.radius = radius;
	}

}
