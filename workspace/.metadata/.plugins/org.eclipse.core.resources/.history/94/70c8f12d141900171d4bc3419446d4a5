package model;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import model.core.Point;
import model.core.Record;
import model.store.Octree;
import model.store.Quadtree;
import utils.Range3D;

public class Model {
	// Speichert alle in dieser Instanz aktiven Records
	private final ObservableList<Record> allActiveRecords;

	// Dient zum mappen in 2D
	private final Quadtree quad;
	// Dient zum mappen in 3D
	private final Octree oct;

	/**
	 * Spezifiziert zusätzlich zum einfacheren Konstruktor noch die maximale
	 * Anzahl von Punkten pro Quadtree-/Octree-Knoten
	 * 
	 * @param range
	 * @param n
	 */
	public Model(Range3D range, int n) {
		allActiveRecords = FXCollections.observableArrayList();

		quad = new Quadtree(range.to2DRange(), n);
		oct = new Octree(range, n);

	}

	/**
	 * Standardkonsturktor der nur den Raum spezifiziert
	 * 
	 * @param range
	 *            spezifiziert nur den Raum der benötigt wird
	 */
	public Model(Range3D range) {
		this(range, 10);
	}

	// -------------------------------------------------------------------------------------------------

	public void addRecord(Record rec) {
		
		for (Point p : rec.getAllPoints()) {
			quad.add(p);
			oct.add(p);
		}
	}

}
